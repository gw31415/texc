#/bin/sh!
# vim: set ft=sh:

# fix Color
[ "${BASH_VERSION:-}" ] && shopt -s expand_aliases
[ $(echo -e) ] || alias echo='echo -e'

# online check
if [ "$(curl -Ls https://tex.amas.dev/ping)" = "OK\n" ]; then
  echo "\033[31;1m> ERROR: \"$file\" Could not connect to server.\033[m"
  exit
fi

texc_cleanup () {
  echo "\033[34;1;4m> Cleanup ...\033[m"
  rm -f tmp_texc.* tmp.texc.*
}
trap 'texc_cleanup' 2

# auto update
(
  that=$(curl -Ls https://raw.githubusercontent.com/gw31415/texc/master/texc | shasum)
  this=$(cat $0 | shasum)
  # readlink -f の代替
  if [ "$(readlink $0)" = "" ]; then
    origin=$0
  else
    origin=$(readlink $0)
    while [ "$(readlink $origin)" != "" ]
    do
      origin=$(readlink $origin)
    done
  fi
  if [ "$that" != "$this" ] && [ "$TEXC_DEV" != "true" ] && [ ! -e "$(dirname $origin)/.texc_dev" ]; then
    set -e
    curl -sLo $origin https://raw.githubusercontent.com/gw31415/texc/master/texc
    echo "\033[32;4m> TEXC has been upgraded.\033[m"
  fi
)&

set -e

if [ $# -eq 1 ]; then
  echo "\033[32m> mode:[default]\033[m"
  env="default"
  file=$1
  save=$file
  ext="pdf"
elif [ $# -eq 2 ] && [ $1 = '-l' ]; then
  echo "\033[32m> mode:[latexmk]\033[m"
  if [ ! -e $2 ]; then
    echo "\033[31;1m> ERROR: \"$2\" does not exist.\033[m"
    exit
  fi
  echo "{ \"main\": \"$2\" }" > tmp.texc.json
  echo "\033[34;1;4m> Packing ...\033[m\033[33m"
  tar -cvf tmp_texc.tar *
  env="latexmk"
  file="tmp_texc.tar"
  save=$2
  ext="pdf"
elif [ $# -eq 2 ] && [ $1 = '-p' ]; then
  echo "\033[32m> mode:[pdflatex]\033[m"
  env="pdflatex"
  file=$2
  save=$file
  ext="pdf"
elif [ $# -eq 2 ] && [ $1 = '-j' ]; then
  echo "\033[32m> mode:[texjpg]\033[m"
  env="texjpg"
  file=$2
  save=$file
  ext="jpg"
elif [ $# -eq 0 ]; then
  echo "\033[;1m> TeXC\033[m"
  echo "\033[;1m>\033[m Online LaTeX compiler"
  echo "\033[;1m>"
  echo "\033[;1m> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
  echo "\033[;1m>\033[m  usage: texc [OPTIONS] FILE"
  echo "\033[;1m>"
  echo "\033[;1m>\033[m\033[32m [OPTIONS]\033[m"
  echo "\033[;1m>\033[m\033[32m <nothing> Compile single LaTeX file. This uses latexmk(uplatex + dvipdfmx).\033[m"
  echo "\033[;1m>\033[m\033[32m    -l     Use latexmk. FILE is a file which it start LaTeX file.\033[m"
  echo "\033[;1m>\033[m\033[32m           Please execute this command at the directory where is the project.\033[m"
  echo "\033[;1m>\033[m\033[32m           You can include .latexmk file.\033[m"
  echo "\033[;1m>\033[m\033[32m    -j     Make JPEG image. Your environment is restricted.\033[m"
  echo "\033[;1m>"
  exit
fi

if [ ! -e $file ]; then
  echo "\033[31;1m> ERROR: \"$file\" does not exist.\033[m"
  exit
fi

echo "\033[34;1;4m> POSTing $file ...\033[m"
if [ "$(uname)" = "Linux" ]; then
  script -c "curl -LX POST  -F file=@$file https://tex.amas.dev/$env" -q /dev/null | tee tmp.texc.log
else
  script -aq /dev/null curl -X POST  -F file=@$file https://tex.amas.dev/$env | tee tmp.texc.log
fi
name=$(basename $save)
url=$(tail -n 1 tmp.texc.log | (read tmp ; echo $tmp | tr -d '\r' | tr -d '\n'))  # tac の代替
if [ $url = "ERROR" ]; then
  echo "\033[31;1m> ERROR: An error has occured.\033[m"
  texc_cleanup
  exit
fi
echo "\033[34;1;4m> Downloading ...\033[m"
curl -sLo ${name%.*}.$ext $url
echo "  \033[32mFile saved: ${name%.*}.$ext\033[m"
texc_cleanup
echo "\033[34;1;4m> Done!\033[m"
